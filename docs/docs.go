// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/change-password": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Employee Change Password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SA - Auth"
                ],
                "summary": "Employee Change Password",
                "parameters": [
                    {
                        "description": "Change password Request",
                        "name": "_",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiEmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    }
                }
            }
        },
        "/auth/create-employee": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create Employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SA - Auth"
                ],
                "summary": "Create Employee",
                "parameters": [
                    {
                        "description": "CreateEmployeeRequest Request",
                        "name": "_",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.CreateEmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiEmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    }
                }
            }
        },
        "/auth/list-department": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "List Department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SA - Auth"
                ],
                "summary": "List Department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "name",
                            "code"
                        ],
                        "type": "string",
                        "description": "Sort field. Default to name,asc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Ignore pagination and return all data",
                        "name": "paging_ignored",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authmodel.ListDepartment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    }
                }
            }
        },
        "/auth/list-employee": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "List Employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SA - Auth"
                ],
                "summary": "List Employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "name",
                            "code"
                        ],
                        "type": "string",
                        "description": "Sort field. Default to code,asc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Ignore pagination and return all data",
                        "name": "paging_ignored",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by department id",
                        "name": "department_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name or email, code, phone number",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by employee id",
                        "name": "employee_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by employee type 1: Doctor, 2: Nurse",
                        "name": "employee_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authmodel.ListEmployee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    }
                }
            }
        },
        "/auth/list-patient": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "List Employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SA - Patient Management"
                ],
                "summary": "List Employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "name"
                        ],
                        "type": "string",
                        "description": "Sort field. Default to name,asc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Ignore pagination and return all data",
                        "name": "paging_ignored",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/patientmodel.ListPatientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Employee Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SA - Auth"
                ],
                "summary": "Employee Login",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "_",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authmodel.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    }
                }
            }
        },
        "/auth/pre-flight": {
            "post": {
                "description": "Pre-flight Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SA - Auth"
                ],
                "summary": "Pre-flight Login",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "_",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authmodel.GenerateLoginSecretRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authmodel.GenerateLoginSecretResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    }
                }
            }
        },
        "/patient/get-patient/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get Patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SA - Patient Management"
                ],
                "summary": "Get Patient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/patientmodel.GetPatientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    }
                }
            }
        },
        "/patient/upsert-patient": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Upsert Patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SA - Patient Management"
                ],
                "summary": "Upsert Patient",
                "parameters": [
                    {
                        "description": "Upsert patient Request",
                        "name": "_",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/patient.UpsertPatientRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiEmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/basemodel.ApiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.ChangePasswordRequest": {
            "type": "object",
            "properties": {
                "new_password": {
                    "description": "encoded password",
                    "type": "string"
                },
                "old_password": {
                    "description": "encoded password",
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.CreateEmployeeRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "integer"
                },
                "degree_name": {
                    "type": "string"
                },
                "degree_year": {
                    "type": "integer"
                },
                "department_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "start_date": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "auth.Department": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "auth.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "integer"
                },
                "degree_name": {
                    "type": "string"
                },
                "degree_year": {
                    "type": "integer"
                },
                "department": {
                    "$ref": "#/definitions/auth.Department"
                },
                "end_date": {
                    "description": "Off board date",
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "start_date": {
                    "description": "Onboard date",
                    "type": "integer"
                },
                "state": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "authmodel.Departments": {
            "type": "object",
            "properties": {
                "departments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/auth.Department"
                    }
                },
                "hasNext": {
                    "type": "boolean"
                },
                "hasPrevious": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "totalElements": {
                    "description": "Num items in all pages",
                    "type": "integer"
                },
                "totalItems": {
                    "description": "Num items in current page",
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "authmodel.Employees": {
            "type": "object",
            "properties": {
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/auth.User"
                    }
                },
                "hasNext": {
                    "type": "boolean"
                },
                "hasPrevious": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "totalElements": {
                    "description": "Num items in all pages",
                    "type": "integer"
                },
                "totalItems": {
                    "description": "Num items in current page",
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "authmodel.GenerateLoginSecretRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "authmodel.GenerateLoginSecretResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/authmodel.LoginSecret"
                }
            }
        },
        "authmodel.ListDepartment": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/authmodel.Departments"
                }
            }
        },
        "authmodel.ListEmployee": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/authmodel.Employees"
                }
            }
        },
        "authmodel.LoginResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "next_step": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/auth.User"
                }
            }
        },
        "authmodel.LoginSecret": {
            "type": "object",
            "properties": {
                "secret": {
                    "type": "string"
                }
            }
        },
        "basemodel.ApiEmptyResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "basemodel.ApiError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gcommon.ErrorDetail"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "gcommon.ErrorDetail": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "patient.InpatientDetail": {
            "type": "object",
            "properties": {
                "admission_date": {
                    "type": "integer"
                },
                "diagnosis": {
                    "type": "string"
                },
                "discharge_date": {
                    "type": "integer"
                },
                "doctor_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "inpatient_id": {
                    "type": "string"
                },
                "invoice": {
                    "$ref": "#/definitions/patient.Invoice"
                },
                "nurse_id": {
                    "type": "string"
                },
                "sickroom": {
                    "type": "string"
                }
            }
        },
        "patient.Invoice": {
            "type": "object",
            "properties": {
                "due_date": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "invoice_date": {
                    "type": "integer"
                },
                "total_amount": {
                    "type": "number"
                }
            }
        },
        "patient.OutpatientDetail": {
            "type": "object",
            "properties": {
                "doctor_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invoice": {
                    "$ref": "#/definitions/patient.Invoice"
                },
                "outpatient_id": {
                    "type": "string"
                }
            }
        },
        "patient.Patient": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "patient.PatientDetail": {
            "type": "object",
            "properties": {
                "inpatient_detail": {
                    "$ref": "#/definitions/patient.InpatientDetail"
                },
                "outpatient_detail": {
                    "$ref": "#/definitions/patient.OutpatientDetail"
                },
                "patient": {
                    "$ref": "#/definitions/patient.Patient"
                }
            }
        },
        "patient.UpsertPatientRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "patientmodel.GetPatientResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "patientDetail": {
                    "$ref": "#/definitions/patient.PatientDetail"
                }
            }
        },
        "patientmodel.ListPatientResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/patientmodel.ListPatientResponseData"
                }
            }
        },
        "patientmodel.ListPatientResponseData": {
            "type": "object",
            "properties": {
                "hasNext": {
                    "type": "boolean"
                },
                "hasPrevious": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "patients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/patient.PatientDetail"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "totalElements": {
                    "description": "Num items in all pages",
                    "type": "integer"
                },
                "totalItems": {
                    "description": "Num items in current page",
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
